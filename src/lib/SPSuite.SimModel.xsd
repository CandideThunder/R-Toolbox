<!--<?xml version="1.0" encoding="UTF-8"?>-->
<xs:schema targetNamespace="http://www.systems-biology.com" xmlns:bts="http://www.systems-biology.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:element name="Simulation">
		<xs:complexType>
			<xs:all>
				<xs:element maxOccurs="1" minOccurs="0" name="ParameterList" type="bts:ParameterListType"/>
				<xs:element maxOccurs="1" minOccurs="0" name="VariableList" type="bts:VariableListType"/>
				<xs:element maxOccurs="1" minOccurs="0" name="ObserverList" type="bts:ObserverListType"/>
				<xs:element maxOccurs="1" minOccurs="0" name="FormulaList" type="bts:FormulaListType"/>
				<xs:element maxOccurs="1" minOccurs="0" name="EventList" type="bts:EventListType"/>
				<xs:element maxOccurs="1" minOccurs="1" name="OutputSchema" type="bts:OutputSchemaType"/>
				<xs:element maxOccurs="1" minOccurs="1" name="Solver" type="bts:SolverType"/>
			</xs:all>
			<xs:attribute name="objectPathDelimiter" type="bts:NEString" use="required"/>
			<xs:attribute name="randomSeed" type="xs:double" use="optional"/>
			<xs:attribute name="version" type="xs:int" use="optional"/>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="SolverType">
		<xs:all>
			<!-- Maximum number of internal steps to be taken by the solver in its  attempt to reach tout. Default  -->
			<xs:element name="MxStep" type="bts:ReferenceType"/>
			<!-- Initial time step size.  -->
			<xs:element name="H0" type="bts:ReferenceType"/>
			<!-- Minimum absolute value of step size allowed.  -->
			<xs:element name="HMin" type="bts:ReferenceType"/>
			<!-- Maximum absolute value of step size allowed. -->
			<xs:element name="HMax" type="bts:ReferenceType"/>
			<!-- Absolute tolerance of unknowns.  -->
			<xs:element name="AbsTol" type="bts:ReferenceType"/>
			<!-- Relative tolerance of unknowns. -->
			<xs:element name="RelTol" type="bts:ReferenceType"/>
			<!-- Use of Jacobian Matrix during calculations-->
			<xs:element name="UseJacobian" type="bts:ReferenceType"/>
			<!-- Solver Specific Options-->
			<xs:element name="SolverOptionList" type="bts:SolverOptionListType" maxOccurs="1" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="name" type="bts:NEString" use="required"/>
	</xs:complexType>

	<xs:complexType name="ParameterType">
		<xs:complexContent>
			<xs:extension base="bts:EntityType">
				<xs:attribute name="formulaId" type="xs:int" use="optional"/>
				<xs:attribute name="canBeVaried" type="bts:bool" use="optional" default="1"/>
				<xs:attribute name="deletable" type="bts:bool" use="optional" default="1"/>
				<xs:attribute name="calculateSensitivity" type="bts:bool" use="optional" default="0"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="VariableType">
		<xs:complexContent>
			<xs:extension base="bts:EntityType">
				<xs:all>
					<xs:element maxOccurs="1" minOccurs="1" name="ScaleFactor" type="xs:double"/>
					<xs:element maxOccurs="1" minOccurs="0" name="RHSFormulaList" type="bts:RHSFormulaListType"/>
				</xs:all>
				<xs:attribute name="initialValueFormulaId" type="xs:int" use="optional"/>
				<xs:attribute name="negativeValuesAllowed" type="bts:bool" use="optional" default="1"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="ObserverType">
		<xs:complexContent>
			<xs:extension base="bts:EntityType">
				<xs:attribute name="formulaId" type="xs:int" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="SolverOptionType">
		<xs:attribute name="name" type="bts:NEString" use="required"/>
		<xs:attribute name="id" type="xs:int" use="required"/>
	</xs:complexType>

	<xs:complexType name="EventType">
		<xs:all>
			<xs:element name="AssignmentList" type="bts:AssignmentListType" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="id" type="xs:int" use="required"/>
		<xs:attribute name="entityId" type="bts:NEString" use="required"/>
		<xs:attribute name="conditionFormulaId" type="xs:int" use="required"/>
		<xs:attribute name="oneTime" type="bts:bool" use="required"/>

	</xs:complexType>
	<xs:complexType name="RHSFormulaType">
		<xs:attribute name="id" type="xs:int" use="required"/>
	</xs:complexType>
	<xs:complexType name="FormulaType">
		<xs:attribute name="id" type="xs:int" use="required"/>
	</xs:complexType>
	<xs:element abstract="true" name="Formula" type="bts:FormulaType"/>
	<xs:complexType name="ExplicitFormulaType">
		<xs:complexContent>
			<xs:extension base="bts:FormulaType">
				<xs:all>
					<xs:element maxOccurs="1" minOccurs="0" name="ParameterList" type="bts:ParameterReferenceListType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="VariableList" type="bts:VariableReferenceListType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="ReferenceList" type="bts:ReferenceListType"/>
					<xs:element name="Equation" type="bts:NEString"/>
				</xs:all>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ExplicitFormula" substitutionGroup="bts:Formula" type="bts:ExplicitFormulaType"/>

	<xs:complexType name="TableFormulaType">
		<xs:complexContent>
			<xs:extension base="bts:FormulaType">
				<xs:all>
					<xs:element name="PointList" type="bts:PointListType"/>
				</xs:all>
				<xs:attribute name="useDerivedValues" type="bts:bool" use="optional" default="1"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TableFormula" substitutionGroup="bts:Formula" type="bts:TableFormulaType"/>

	<xs:complexType name="TableFormulaWithOffsetType">
		<xs:complexContent>
			<xs:extension base="bts:FormulaType">
				<xs:all>
					<xs:element maxOccurs="1" minOccurs="1" name="Table" type="bts:ReferenceType"/>
					<xs:element maxOccurs="1" minOccurs="1" name="Offset" type="bts:ReferenceType"/>
				</xs:all>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TableFormulaWithOffset" substitutionGroup="bts:Formula" type="bts:TableFormulaWithOffsetType"/>

	<xs:complexType name="EntityType">
		<xs:attribute name="id" type="xs:int" use="required"/>
		<xs:attribute name="entityId" type="bts:NEString" use="required"/>
		<xs:attribute name="name" type="bts:NEString" use="optional"/>
		<xs:attribute name="path" type="bts:NEString" use="optional"/>
		<xs:attribute name="unit" type="xs:string" use="optional"/>
		<xs:attribute name="persistable" type="bts:bool" use="optional"/>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="description" type="bts:NEString" use="optional"/>
	</xs:complexType>

	<xs:complexType name="ReferenceTypeWithAlias">
		<xs:complexContent>
			<xs:extension base="bts:FormulaType">
				<xs:attribute name="alias" type="bts:NEString" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ReferenceType">
		<xs:attribute name="id" type="xs:int" use="required"/>
	</xs:complexType>
	<!--<xs:complexType name="PointType">
		<xs:sequence>
			<xs:element name="X" type="bts:ReferenceType"/>
			<xs:element name="Y" type="bts:ReferenceType"/>
		</xs:sequence>
	</xs:complexType>-->
	<xs:complexType name="PointType">
		<xs:attribute name="x" type="xs:double" use="required"/>
		<xs:attribute name="y" type="xs:double" use="required"/>
		<xs:attribute name="restartSolver" type="bts:bool" use="optional"/>
	</xs:complexType>

	<xs:complexType name="AssignmentType">
		<xs:attribute name="objectId" type="xs:int" use="required"/>
		<xs:attribute name="newFormulaId" type="xs:int" use="optional"/>
		<xs:attribute name="useAsValue" type="bts:bool" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OutputIntervalType">
		<xs:all>
			<xs:element name="StartTime" type="bts:PositiveDoubleType"/>
			<xs:element name="EndTime" type="bts:PositiveDoubleType"/>
			<xs:element name="NumberOfTimePoints" type="bts:PositiveIntegerType"/>
		</xs:all>
		<xs:attribute name="distribution" type="bts:NEString" use="required"/>
	</xs:complexType>
	<xs:complexType name="OutputSchemaType">
		<xs:all>
			<xs:element name="OutputIntervalList" type="bts:OutputIntervalListType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="OutputTimeList" type="bts:OutputTimeListType"/>
		</xs:all>
	</xs:complexType>
	<!-- Element lists-->
	<xs:complexType name="PointListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Point" type="bts:PointType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OutputIntervalListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="OutputInterval" type="bts:OutputIntervalType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OutputTimeListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="OutputTime" type="bts:PositiveDoubleType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AssignmentListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Assignment" type="bts:AssignmentType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParameterListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="P" type="bts:ParameterType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParameterReferenceListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="P" type="bts:ReferenceTypeWithAlias"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VariableReferenceListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="V" type="bts:ReferenceTypeWithAlias"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReferenceListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="R" type="bts:ReferenceTypeWithAlias"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VariableListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="V" type="bts:VariableType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EventListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Event" type="bts:EventType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObserverListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Observer" type="bts:ObserverType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FormulaListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" ref="bts:Formula"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RHSFormulaListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="RHSFormula" type="bts:RHSFormulaType"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Not Empty String-->
	<xs:simpleType name="NEString">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<!--Boolean as interger 0 or 1-->
	<xs:simpleType name="bool">
		<xs:restriction base="xs:integer">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<!--Double >=0 -->
	<xs:simpleType name="PositiveDoubleType">
		<xs:restriction base="xs:double">
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	<!--Integer >=0 -->
	<xs:simpleType name="PositiveIntegerType">
		<xs:restriction base="xs:int">
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	<!--Double > 0-->
	<xs:simpleType name="StrictPositiveDoubleType">
		<xs:restriction base="xs:double">
			<xs:minExclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SolverOptionListType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="SolverOption" type="bts:SolverOptionType"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
